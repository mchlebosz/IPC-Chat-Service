name: gpg tester
on: 
  push:
   branches-ignore:
     - "main"
jobs:
  generate_plantuml:
    runs-on: ubuntu-latest
    name: GPGtest
    steps:
      # - name: Install Dependencies
      #   run: |
      #     sudo apt-get install graphviz
      - name: Checkout Repository
        uses: actions/checkout@v3

        
      # - name: Download PlantUML
      #   run: wget https://sourceforge.net/projects/plantuml/files/plantuml.jar/download -O plantuml.jar
      # - name: Process Diagrams
      #   run: java -jar plantuml.jar -v -tsvg -r -o "${{ github.workspace }}/out" "diagrams/**.puml"
      # - name: Display Diagrams
      #   run: pwd && ls out
      # - name: Remove PlantUML
      #   run: rm plantuml.jar


      -
        name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true


      -
        name: List keys gpg
        run: gpg --list-secret-keys --keyid-format LONG

      - name: List keys 2
        run: gpg -K

      - name: Show gpg agent
        run: gpgconf --list-dirs

      - name: Show gpgcontent
        run: ls -la ~/.gnupg

      - name: List keys 2
        run: gpg -K

      - name: Set permissions on GPG files
        run: |
            chmod 700 ~/.gnupg
            chmod 600 ~/.gnupg/pubring.kbx
            chmod 600 ~/.gnupg/trustdb.gpg
            
      - name: Show git config
        run: git config --list

      - name: set log file
        run: |
          touch ~/.gnupg/gpq.conf
          echo "log-file ~/.gnupg/log" >> ~/.gnupg/gpg.conf

      - name: Commit and Push
        run: |
          echo "test" > test.txt
          git add .
          GIT_TRACE=true \
          GIT_CURL_VERBOSE=true \
          GIT_SSH_COMMAND="ssh -vvv" \
          GIT_TRACE_PACK_ACCESS=true \
          GIT_TRACE_PACKET=true \
          GIT_TRACE_PACKFILE=true \
          GIT_TRACE_PERFORMANCE=true \
          GIT_TRACE_SETUP=true \
          GIT_TRACE_SHALLOW=true \
          git commit -S -m "Update diagrams [no ci]"
          git push
        continue-on-error: true

      - name: gpg log 
        run: cat ~/.gnupg/log

      - name: gpg log 2
        run: journalctl -u gnupg.service


